/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        lower_layer {
            bindings = <
&trans           &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7         &kp F8        &kp F9               &kp F10                &kp F11          &kp F12  &kp RGUI
        &mt LCTRL EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0  &mt RCTRL MINUS
          &mt LALT PLUS      &kp EXCL        &kp AT      &kp HASH      &kp DLLR   &kp PERCENT       &kp CARET  &kp AMPERSAND      &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &mt LALT UNDER
                                             &trans        &trans        &trans        &trans          &trans         &trans        &trans                &trans
            >;
        };

        default_layer {
            bindings = <
&kp LWIN  &kp GRAVE     &kp Q      &kp W    &mt F4 E           &kp R           &kp T             &kp Y           &kp U                 &kp I           &kp O                   &kp P       &kp LBKT  &mt RWIN RBKT
          &kp LCTRL  &mt N1 A   &mt N2 S    &mt N3 D  &mt NUMBER_4 F  &mt NUMBER_5 G    &mt NUMBER_6 H  &mt NUMBER_7 J        &mt NUMBER_8 K  &mt NUMBER_9 L  &mt NUMBER_0 SEMICOLON  &mt RCTRL SQT
           &kp LALT     &kp Z      &kp X       &kp C           &kp V           &kp B             &kp N           &kp M             &kp COMMA         &kp DOT                &kp FSLH  &mt RALT BSLH
                               &lt 4 TAB  &kp LSHIFT     &lt 2 SPACE       &lt 0 ESC       &lt 0 ENTER     &lt 2 SPACE  &mt RSHIFT BACKSPACE    &lt 4 DELETE
            >;
        };

        raise_layer {
            bindings = <
&trans   &none     &none     &none      &none       &none     &none      &kp ESC   &kp HOME     &kp UP    &kp END              &none          &none  &kp RGUI
        &trans  &kp LWIN  &kp LALT  &kp LCTRL  &kp LSHIFT  &sk RALT     &kp BSPC   &kp LEFT   &kp DOWN  &kp RIGHT            &kp DEL  &mt RCTRL TAB
        &trans     &none     &none      &none       &none     &none    &kp ENTER  &kp SPACE  &kp PG_UP  &kp PG_DN  &kp K_APPLICATION       &kp LALT
                            &trans      &mo 3      &trans    &trans       &trans     &trans      &mo 3     &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &bootloader         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none  &bootloader  &none
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR
        &sys_reset         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none   &sys_reset
                                         &none        &trans         &none        &trans          &trans         &none        &trans         &none
            >;
        };

        numpad {
            bindings = <
&trans   &none  &none   &none   &none   &none   &none    &kp KP_SUBTRACT  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9    &kp KP_DIVIDE          &kp KP_NUM  &mt RGUI ESC
        &trans  &none   &none   &none   &none   &none        &kp KP_PLUS  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MULTIPLY  &mt RCTRL KP_ENTER
        &trans  &none   &none   &none   &none   &none    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3       &kp KP_DOT              &trans
                       &trans  &trans  &trans  &trans             &trans           &trans           &trans           &trans
            >;
        };
    };
};
