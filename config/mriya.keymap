/*
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NUM 1
#define NPD 2
#define FN  3
#define SYS 4

&lt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2 3>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        alt_tab {
            bindings = <&alt_tab>;
            key-positions = <40 2>;
            timeout-ms = <50>;
            slow-release;
        };

        alt_tab2 {
            bindings = <&kp LA(TAB)>;
            key-positions = <40 3>;
            timeout-ms = <50>;
            slow-release;
        };
    };

    macros {
        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 5 &kp LALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT &mo 5>;

            label = "ALT_TAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp LGUI  &kp GRAVE  &kp Q  &kp W      &kp E           &kp R         &kp T        &kp Y        &kp U         &kp I            &kp O      &kp P          &kp LEFT_BRACKET  &mt RALT RIGHT_BRACKET
          &kp LCTRL  &kp A  &kp S      &kp D           &kp F         &kp G        &kp H        &kp J         &kp K            &kp L      &kp SEMICOLON  &mt RCTRL SQT
          &kp LALT   &kp Z  &kp X      &kp C           &kp V         &kp B        &kp N        &kp M         &kp COMMA        &kp DOT    &kp SLASH      &mt LALT BSLH
                            &lt 2 ESC  &kp LEFT_SHIFT  &lt FN SPACE  &lt 1 TAB    &lt 1 ENTER  &lt FN SPACE  &mt RSHIFT BSPC  &lt 2 DEL
            >;
        };

        numbers {
            bindings = <
&kp LEFT_WIN  &kp F1     &kp F2             &kp F3             &kp F4              &kp F5              &kp F6         &kp F7     &kp F8         &kp F9        &kp F10               &kp F11                &kp F12    &kt RIGHT_ALT
              &kp PLUS   &mt LGUI NUMBER_1  &mt LALT NUMBER_2  &mt LCTRL NUMBER_3  &mt LSHFT NUMBER_4  &kp N5         &kp N6     &mt RSHFT N7   &mt RCTRL N8  &mt LALT N9           &mt RGUI N0            &kp MINUS
              &kp EQUAL  &kp EXCLAMATION    &kp AT             &kp HASH            &kp DOLLAR          &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER
                                            &trans             &trans              &trans              &trans         &trans     &trans         &trans        &trans
            >;
        };

        numpad {
            bindings = <
&none  &none  &none  &none   &none   &none   &none     &kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE  &kp ESCAPE    &kp KP_NUM
       &none  &none  &none   &none   &none   &none     &kp KP_PLUS      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS   &kp KP_ENTER
       &none  &none  &none   &none   &none   &none     &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT     &none
                     &trans  &trans  &trans  &trans    &trans           &trans           &trans           &trans
            >;
        };

        function {
            bindings = <
&none  &none  &none     &none     &none      &none      &none       &kp ESC    &kp HOME   &kp UP     &kp END    &kp INSERT  &none    &none
       &none  &kp LWIN  &kp LALT  &kp LCTRL  &kp LSHFT  &sk RALT    &kp BSPC   &kp LEFT   &kp DOWN   &kp RIGHT  &kp DEL     &kp TAB
       &none  &none     &none     &none      &none      &none       &kp ENTER  &kp SPACE  &kp PG_UP  &kp PG_DN  &kp K_APP   &none
                        &trans    &trans     &trans     &trans      &trans     &trans     &trans     &trans
            >;
        };

        system {
            bindings = <
&to 0  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &trans        &trans        &trans        &trans          &trans        &trans        &trans        &trans
            >;
        };

        alt_tab {
            bindings = <
&trans  &trans  &kp TAB  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
